name: release

on:
  push:
    tags:
      - "*.*.*"
      # Uncomment to exclude pre-release tags
      # - '!*.*.*-**'
  # Allow all users to trigger this workflow
  workflow_dispatch:

permissions:
  contents: write # Allows writing releases
  packages: write # Allows publishing packages
  id-token: write # Required for OIDC token publishing

env:
  PROVIDER: "netcup"
  # GitHub token for releases - automatically provided
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # NPM Publishing Configuration
  NPM_TOKEN: ${{ secrets.NPMJS_AUTH_TOKEN }}
  PUBLISH_NPM: true
  NPM_REGISTRY_URL: https://registry.npmjs.org

  # NuGet Publishing Configuration
  NUGET_PUBLISH_KEY: ${{ secrets.NUGET_PUBLISH_KEY }}
  NUGET_FEED_URL: https://api.nuget.org/v3/index.json
  PUBLISH_NUGET: true

  # PyPI Publishing Configuration
  PYPI_PASSWORD: ${{ secrets.PYPI_TOKEN }}
  PYPI_USERNAME: "__token__"
  PUBLISH_PYPI: true

jobs:
  publish_binary:
    name: Publish Binary
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for proper tag handling

      - name: Inject enhanced GitHub environment variables
        uses: rlespinasse/github-slug-action@v5

      - name: Install Go
        uses: actions/setup-go@v6
        with:
          go-version: "1.24"

      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.14.0
        with:
          repo: pulumi/pulumictl
          cache: enable

      - name: Install Pulumi CLI
        uses: pulumi/actions@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "24"
          registry-url: ${{ env.NPM_REGISTRY_URL }}
          cache: "yarn"
          cache-dependency-path: |
            sdk/nodejs/package.json

      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: "8.0.x"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Generate SDK
        run: make build

      - name: Verify Clean Working Tree
        run: |
          git update-index -q --refresh
          if ! git diff-files --quiet; then
              echo "::error::Working tree is not clean after SDK generation"
              git status
              git diff
              exit 1
          fi

      - name: Run GoReleaser
        if: startsWith(github.ref, 'refs/tags/')
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          args: release --clean --parallelism 3
          version: latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate versioned SDK
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          # Remove the initial v from the version (e.g., v0.1.0 -> 0.1.0)
          TAG=${{ env.GITHUB_REF_SLUG }}
          export PROVIDER_VERSION=${TAG#v}
          make build

      - name: Prepare SDK Archives
        run: |
          rm -rf sdk/tmp
          mkdir -p sdk/tmp

          # Create compressed archives for each SDK
          tar -czf sdk/tmp/dotnet.tar.gz -C sdk/dotnet .
          tar -czf sdk/tmp/go.tar.gz -C sdk/go .
          tar -czf sdk/tmp/nodejs.tar.gz -C sdk/nodejs .
          tar -czf sdk/tmp/python.tar.gz -C sdk/python .

      - name: Upload SDK Archives to Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            sdk/tmp/dotnet.tar.gz
            sdk/tmp/go.tar.gz
            sdk/tmp/nodejs.tar.gz
            sdk/tmp/python.tar.gz

      # Publish to PyPI using trusted publishing (recommended)
      - name: Publish to PyPI
        if: (startsWith(github.ref, 'refs/tags/') && env.PUBLISH_PYPI == 'true')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: ${{ github.workspace }}/sdk/python/bin/dist
          # Use trusted publishing when possible, fallback to token
          user: ${{ env.PYPI_USERNAME }}
          password: ${{ env.PYPI_PASSWORD }}

      # Publish to NPM
      - name: Publish to NPM
        if: (startsWith(github.ref, 'refs/tags/') && env.PUBLISH_NPM == 'true')
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ env.NPM_TOKEN }}
          package: ${{ github.workspace }}/sdk/nodejs/bin
          access: public

      # Publish to NuGet
      - name: Publish to NuGet
        if: (startsWith(github.ref, 'refs/tags/') && env.PUBLISH_NUGET == 'true')
        run: |
          dotnet nuget push ${{ github.workspace }}/sdk/dotnet/bin/Debug/*.nupkg \
            --source ${{ env.NUGET_FEED_URL }} \
            --api-key ${{ env.NUGET_PUBLISH_KEY }} \
            --skip-duplicate
